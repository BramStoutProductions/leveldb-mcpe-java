<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>leveldb-project</artifactId>
    <groupId>com.hivemc.leveldb</groupId>
    <version>1.0.1</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>leveldb</artifactId>
  <name>${project.artifactId}</name>
  <description>Port of LevelDB to Java</description>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>${project.basedir}/src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <properties>
              <property>
                <name>listener</name>
                <value>org.testng.reporters.VerboseReporter</value>
              </property>
            </properties>
            <systemPropertyVariables>
              <sun.jnu.encoding>${project.build.sourceEncoding}</sun.jnu.encoding>
              <user.timezone>${air.test.timezone}</user.timezone>
              <java.awt.headless>true</java.awt.headless>
              <java.util.logging.SimpleFormatter.format>%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s %5$s%6$s%n</java.util.logging.SimpleFormatter.format>
            </systemPropertyVariables>
            <runOrder>random</runOrder>
            <reuseForks>true</reuseForks>
            <parallel>${air.test.parallel}</parallel>
            <threadCount>${air.test.thread-count}</threadCount>
            <argLine>${argLine}
                            -Dfile.encoding=${project.build.sourceEncoding}
                            -Xmx${air.test.jvmsize}
                            -Xms${air.test.jvmsize}
                            -XX:OnOutOfMemoryError="kill -9 %p"
                            -XX:+HeapDumpOnOutOfMemoryError</argLine>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <shadedClassifierName>uber</shadedClassifierName>
          <artifactSet>
            <excludes>
              <exclude>org.iq80.snappy:snappy:jar</exclude>
            </excludes>
          </artifactSet>
          <relocations>
            <relocation>
              <pattern>com.google.common</pattern>
              <shadedPattern>${shadeBase}.guava</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.google.thirdparty</pattern>
              <shadedPattern>${shadeBase}.guava</shadedPattern>
            </relocation>
          </relocations>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.10.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.10</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
        <exclusion>
          <artifactId>guice</artifactId>
          <groupId>com.google.inject</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jcommander</artifactId>
          <groupId>com.beust</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.fusesource.leveldbjni</groupId>
      <artifactId>leveldbjni</artifactId>
      <version>1.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>org.iq80.leveldb</artifactId>
          <groupId>leveldb-api</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hawtjni-runtime</artifactId>
          <groupId>org.fusesource.hawtjni</groupId>
        </exclusion>
        <exclusion>
          <artifactId>leveldb-api</artifactId>
          <groupId>org.iq80.leveldb</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <properties>
    <air.test.jvmsize>2048m</air.test.jvmsize>
    <air.main.basedir>${project.parent.basedir}</air.main.basedir>
    <shadeBase>org.iq80.leveldb.shaded</shadeBase>
    <air.test.thread-count>1</air.test.thread-count>
  </properties>
</project>
